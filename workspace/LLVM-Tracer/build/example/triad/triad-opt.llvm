; ModuleID = '/workspace/LLVM-Tracer/build/example/triad/triad.llvm'
source_filename = "llvm-link"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, i8*, i8*, i8*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type { %struct._IO_marker*, %struct._IO_FILE*, i32 }

@.str = private unnamed_addr constant [12 x i8] c"output.data\00", align 1
@.str.1 = private unnamed_addr constant [2 x i8] c"w\00", align 1
@.str.2 = private unnamed_addr constant [4 x i8] c"%d,\00", align 1
@.str.3 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.4 = private constant [6 x i8] c"triad\00"
@.str.5 = private constant [4 x i8] c"4:0\00"
@.str.6 = private constant [6 x i8] c"4:0-5\00"
@.str.7 = private constant [4 x i8] c"5:1\00"
@.str.8 = private constant [4 x i8] c"phi\00"
@.str.9 = private constant [2 x i8] c"i\00"
@.str.10 = private constant [3 x i8] c"14\00"
@.str.11 = private constant [1 x i8] zeroinitializer
@.str.12 = private constant [2 x i8] c"7\00"
@.str.13 = private constant [2 x i8] c"a\00"
@.str.14 = private constant [2 x i8] c"8\00"
@.str.15 = private constant [2 x i8] c"9\00"
@.str.16 = private constant [2 x i8] c"b\00"
@.str.17 = private constant [3 x i8] c"10\00"
@.str.18 = private constant [3 x i8] c"11\00"
@.str.19 = private constant [2 x i8] c"s\00"
@.str.20 = private constant [3 x i8] c"12\00"
@.str.21 = private constant [3 x i8] c"13\00"
@.str.22 = private constant [2 x i8] c"c\00"
@.str.23 = private constant [6 x i8] c"5:1-1\00"
@.str.24 = private constant [3 x i8] c"15\00"
@.str.25 = private constant [6 x i8] c"5:1-2\00"
@.str.26 = private constant [5 x i8] c"16:0\00"
@.str.27 = private constant [7 x i8] c"16:0-0\00"
@.str.28 = private constant [5 x i8] c"main\00"
@.str.29 = private constant [4 x i8] c"0:0\00"
@.str.30 = private constant [2 x i8] c"1\00"
@.str.31 = private constant [7 x i8] c"malloc\00"
@.str.32 = private constant [2 x i8] c"2\00"
@.str.33 = private constant [2 x i8] c"3\00"
@.str.34 = private constant [2 x i8] c"4\00"
@.str.35 = private constant [2 x i8] c"5\00"
@.str.36 = private constant [2 x i8] c"6\00"
@.str.37 = private constant [5 x i8] c"time\00"
@.str.38 = private constant [6 x i8] c"0:0-3\00"
@.str.39 = private constant [6 x i8] c"srand\00"
@.str.40 = private constant [6 x i8] c"0:0-5\00"
@.str.41 = private constant [4 x i8] c"9:1\00"
@.str.42 = private constant [3 x i8] c"16\00"
@.str.43 = private constant [6 x i8] c"9:1-1\00"
@.str.44 = private constant [5 x i8] c"rand\00"
@.str.45 = private constant [6 x i8] c"9:1-2\00"
@.str.46 = private constant [6 x i8] c"9:1-3\00"
@.str.47 = private constant [3 x i8] c"17\00"
@.str.48 = private constant [6 x i8] c"9:1-4\00"
@.str.49 = private constant [5 x i8] c"18:0\00"
@.str.50 = private constant [7 x i8] c"18:0-0\00"
@.str.51 = private constant [7 x i8] c"output\00"
@.str.52 = private constant [6 x i8] c"fopen\00"
@.str.53 = private constant [12 x i8] c"output.data\00"
@.str.54 = private constant [2 x i8] c"w\00"
@.str.55 = private constant [7 x i8] c"18:0-3\00"
@.str.56 = private constant [5 x i8] c"20:1\00"
@.str.57 = private constant [3 x i8] c"25\00"
@.str.58 = private constant [3 x i8] c"22\00"
@.str.59 = private constant [3 x i8] c"23\00"
@.str.60 = private constant [3 x i8] c"24\00"
@.str.61 = private constant [8 x i8] c"fprintf\00"
@.str.62 = private constant [4 x i8] c"%d,\00"
@.str.63 = private constant [3 x i8] c"26\00"
@.str.64 = private constant [7 x i8] c"20:1-1\00"
@.str.65 = private constant [5 x i8] c"27:0\00"
@.str.66 = private constant [3 x i8] c"28\00"
@.str.67 = private constant [2 x i8] c"\0A\00"
@.str.68 = private constant [3 x i8] c"29\00"
@.str.69 = private constant [7 x i8] c"fclose\00"
@.str.70 = private constant [7 x i8] c"27:0-0\00"

; Function Attrs: noinline nounwind uwtable
define void @triad(i32* nocapture readonly, i32* nocapture readonly, i32* nocapture, i32) local_unnamed_addr #0 !dbg !10 {
  call void @trace_logger_update_status(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.4, i32 0, i32 0), i64 0, i1 true, i1 true), !dbg !19
  call void @trace_logger_log_entry(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.4, i32 0, i32 0), i64 4), !dbg !19
  %5 = ptrtoint i32* %0 to i64, !dbg !19
  call void @trace_logger_log_ptr(i64 1, i64 64, i64 %5, i64 1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.13, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.8, i32 0, i32 0)), !dbg !19
  %6 = ptrtoint i32* %1 to i64, !dbg !19
  call void @trace_logger_log_ptr(i64 2, i64 64, i64 %6, i64 1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.16, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.8, i32 0, i32 0)), !dbg !19
  %7 = ptrtoint i32* %2 to i64, !dbg !19
  call void @trace_logger_log_ptr(i64 3, i64 64, i64 %7, i64 1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.22, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.8, i32 0, i32 0)), !dbg !19
  %8 = zext i32 %3 to i64, !dbg !19
  call void @trace_logger_log_int(i64 4, i64 32, i64 %8, i64 1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.19, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.8, i32 0, i32 0)), !dbg !19
  call void @llvm.dbg.value(metadata i32* %0, metadata !14, metadata !DIExpression()), !dbg !19
  call void @llvm.dbg.value(metadata i32* %1, metadata !15, metadata !DIExpression()), !dbg !20
  call void @llvm.dbg.value(metadata i32* %2, metadata !16, metadata !DIExpression()), !dbg !21
  call void @llvm.dbg.value(metadata i32 %3, metadata !17, metadata !DIExpression()), !dbg !22
  call void @llvm.dbg.value(metadata i32 0, metadata !18, metadata !DIExpression()), !dbg !23
  call void @trace_logger_log0(i64 5, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.4, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.5, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.6, i32 0, i32 0), i64 2, i1 true, i1 true), !dbg !24
  call void @trace_logger_log_int(i64 1, i64 0, i64 0, i64 1, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.7, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.8, i32 0, i32 0)), !dbg !24
  br label %9, !dbg !24

; <label>:9:                                      ; preds = %9, %4
  %10 = phi i64 [ 0, %4 ], [ %36, %9 ]
  call void @trace_logger_log0(i64 -1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.4, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.7, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9, i32 0, i32 0), i64 53, i1 true, i1 true), !dbg !23
  call void @trace_logger_log_int(i64 2, i64 64, i64 0, i64 1, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.10, i32 0, i32 0), i64 1, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.7, i32 0, i32 0)), !dbg !23
  call void @trace_logger_log_int(i64 1, i64 64, i64 0, i64 0, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.11, i32 0, i32 0), i64 1, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.5, i32 0, i32 0)), !dbg !23
  call void @trace_logger_log_int(i64 19134, i64 64, i64 %10, i64 1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.5, i32 0, i32 0)), !dbg !23
  call void @llvm.dbg.value(metadata i64 %10, metadata !18, metadata !DIExpression()), !dbg !23
  call void @trace_logger_log0(i64 6, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.4, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.7, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.12, i32 0, i32 0), i64 32, i1 true, i1 true), !dbg !26
  call void @trace_logger_log_int(i64 2, i64 64, i64 %10, i64 1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.8, i32 0, i32 0)), !dbg !26
  %11 = ptrtoint i32* %0 to i64, !dbg !26
  call void @trace_logger_log_ptr(i64 1, i64 64, i64 %11, i64 1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.13, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.8, i32 0, i32 0)), !dbg !26
  %12 = getelementptr inbounds i32, i32* %0, i64 %10, !dbg !26
  %13 = ptrtoint i32* %12 to i64, !dbg !26
  call void @trace_logger_log_ptr(i64 19134, i64 64, i64 %13, i64 1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.12, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.8, i32 0, i32 0)), !dbg !26
  call void @trace_logger_log0(i64 6, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.4, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.7, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.14, i32 0, i32 0), i64 30, i1 true, i1 true), !dbg !26
  %14 = ptrtoint i32* %12 to i64, !dbg !26
  call void @trace_logger_log_ptr(i64 1, i64 64, i64 %14, i64 1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.12, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.8, i32 0, i32 0)), !dbg !26
  %15 = load i32, i32* %12, align 4, !dbg !26, !tbaa !29
  %16 = zext i32 %15 to i64, !dbg !33
  call void @trace_logger_log_int(i64 19134, i64 32, i64 %16, i64 1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.14, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.8, i32 0, i32 0)), !dbg !33
  call void @trace_logger_log0(i64 6, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.4, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.7, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.15, i32 0, i32 0), i64 32, i1 true, i1 true), !dbg !33
  call void @trace_logger_log_int(i64 2, i64 64, i64 %10, i64 1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.8, i32 0, i32 0)), !dbg !33
  %17 = ptrtoint i32* %1 to i64, !dbg !33
  call void @trace_logger_log_ptr(i64 1, i64 64, i64 %17, i64 1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.16, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.8, i32 0, i32 0)), !dbg !33
  %18 = getelementptr inbounds i32, i32* %1, i64 %10, !dbg !33
  %19 = ptrtoint i32* %18 to i64, !dbg !33
  call void @trace_logger_log_ptr(i64 19134, i64 64, i64 %19, i64 1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.15, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.8, i32 0, i32 0)), !dbg !33
  call void @trace_logger_log0(i64 6, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.4, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.7, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.17, i32 0, i32 0), i64 30, i1 true, i1 true), !dbg !33
  %20 = ptrtoint i32* %18 to i64, !dbg !33
  call void @trace_logger_log_ptr(i64 1, i64 64, i64 %20, i64 1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.15, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.8, i32 0, i32 0)), !dbg !33
  %21 = load i32, i32* %18, align 4, !dbg !33, !tbaa !29
  %22 = zext i32 %21 to i64, !dbg !34
  call void @trace_logger_log_int(i64 19134, i64 32, i64 %22, i64 1, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.17, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.8, i32 0, i32 0)), !dbg !34
  call void @trace_logger_log0(i64 6, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.4, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.7, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.18, i32 0, i32 0), i64 15, i1 true, i1 true), !dbg !34
  %23 = zext i32 %3 to i64, !dbg !34
  call void @trace_logger_log_int(i64 2, i64 32, i64 %23, i64 1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.19, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.8, i32 0, i32 0)), !dbg !34
  %24 = zext i32 %21 to i64, !dbg !34
  call void @trace_logger_log_int(i64 1, i64 32, i64 %24, i64 1, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.17, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.8, i32 0, i32 0)), !dbg !34
  %25 = mul nsw i32 %21, %3, !dbg !34
  %26 = zext i32 %25 to i64, !dbg !35
  call void @trace_logger_log_int(i64 19134, i64 32, i64 %26, i64 1, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.18, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.8, i32 0, i32 0)), !dbg !35
  call void @trace_logger_log0(i64 6, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.4, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.7, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.20, i32 0, i32 0), i64 11, i1 true, i1 true), !dbg !35
  %27 = zext i32 %15 to i64, !dbg !35
  call void @trace_logger_log_int(i64 2, i64 32, i64 %27, i64 1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.14, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.8, i32 0, i32 0)), !dbg !35
  %28 = zext i32 %25 to i64, !dbg !35
  call void @trace_logger_log_int(i64 1, i64 32, i64 %28, i64 1, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.18, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.8, i32 0, i32 0)), !dbg !35
  %29 = add nsw i32 %25, %15, !dbg !35
  %30 = zext i32 %29 to i64, !dbg !36
  call void @trace_logger_log_int(i64 19134, i64 32, i64 %30, i64 1, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.20, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.8, i32 0, i32 0)), !dbg !36
  call void @trace_logger_log0(i64 6, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.4, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.7, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.21, i32 0, i32 0), i64 32, i1 true, i1 true), !dbg !36
  call void @trace_logger_log_int(i64 2, i64 64, i64 %10, i64 1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.8, i32 0, i32 0)), !dbg !36
  %31 = ptrtoint i32* %2 to i64, !dbg !36
  call void @trace_logger_log_ptr(i64 1, i64 64, i64 %31, i64 1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.22, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.8, i32 0, i32 0)), !dbg !36
  %32 = getelementptr inbounds i32, i32* %2, i64 %10, !dbg !36
  %33 = ptrtoint i32* %32 to i64, !dbg !37
  call void @trace_logger_log_ptr(i64 19134, i64 64, i64 %33, i64 1, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.21, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.8, i32 0, i32 0)), !dbg !37
  call void @trace_logger_log0(i64 6, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.4, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.7, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.23, i32 0, i32 0), i64 31, i1 true, i1 true), !dbg !37
  %34 = ptrtoint i32* %32 to i64, !dbg !37
  call void @trace_logger_log_ptr(i64 2, i64 64, i64 %34, i64 1, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.21, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.8, i32 0, i32 0)), !dbg !37
  %35 = zext i32 %29 to i64, !dbg !37
  call void @trace_logger_log_int(i64 1, i64 32, i64 %35, i64 1, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.20, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.8, i32 0, i32 0)), !dbg !37
  store i32 %29, i32* %32, align 4, !dbg !37, !tbaa !29
  call void @trace_logger_log0(i64 5, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.4, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.7, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.10, i32 0, i32 0), i64 11, i1 true, i1 true), !dbg !38
  call void @trace_logger_log_int(i64 2, i64 64, i64 1, i64 0, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.11, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.8, i32 0, i32 0)), !dbg !38
  call void @trace_logger_log_int(i64 1, i64 64, i64 %10, i64 1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.8, i32 0, i32 0)), !dbg !38
  %36 = add nuw nsw i64 %10, 1, !dbg !38
  call void @trace_logger_log_int(i64 19134, i64 64, i64 %36, i64 1, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.10, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.8, i32 0, i32 0)), !dbg !39
  call void @trace_logger_log0(i64 5, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.4, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.7, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.24, i32 0, i32 0), i64 51, i1 true, i1 true), !dbg !39
  call void @trace_logger_log_int(i64 2, i64 64, i64 2048, i64 0, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.11, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.8, i32 0, i32 0)), !dbg !39
  call void @trace_logger_log_int(i64 1, i64 64, i64 %36, i64 1, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.10, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.8, i32 0, i32 0)), !dbg !39
  %37 = icmp eq i64 %36, 2048, !dbg !39
  %38 = zext i1 %37 to i64, !dbg !24
  call void @trace_logger_log_int(i64 19134, i64 1, i64 %38, i64 1, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.24, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.8, i32 0, i32 0)), !dbg !24
  call void @trace_logger_log0(i64 5, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.4, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.7, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.25, i32 0, i32 0), i64 2, i1 true, i1 true), !dbg !24
  call void @trace_logger_log_int(i64 3, i64 0, i64 0, i64 1, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.26, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.8, i32 0, i32 0)), !dbg !24
  call void @trace_logger_log_int(i64 2, i64 0, i64 0, i64 1, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.7, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.8, i32 0, i32 0)), !dbg !24
  %39 = zext i1 %37 to i64, !dbg !24
  call void @trace_logger_log_int(i64 1, i64 1, i64 %39, i64 1, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.24, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.8, i32 0, i32 0)), !dbg !24
  br i1 %37, label %40, label %9, !dbg !24, !llvm.loop !40

; <label>:40:                                     ; preds = %9
  call void @trace_logger_log0(i64 8, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.4, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.26, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.27, i32 0, i32 0), i64 1, i1 true, i1 true), !dbg !42
  call void @trace_logger_update_status(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.4, i32 0, i32 0), i64 1, i1 true, i1 true), !dbg !42
  ret void, !dbg !42
}

; Function Attrs: nounwind readnone speculatable
declare void @llvm.dbg.value(metadata, metadata, metadata) #1

; Function Attrs: noinline nounwind uwtable
define i32 @main() local_unnamed_addr #0 !dbg !43 {
  call void @trace_logger_log0(i64 12, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.28, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.29, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.30, i32 0, i32 0), i64 54, i1 false, i1 true), !dbg !114
  call void @trace_logger_log_ptr(i64 2, i64 64, i64 ptrtoint (i8* (i64)* @malloc to i64), i64 1, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.31, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.8, i32 0, i32 0)), !dbg !114
  call void @trace_logger_log_int(i64 1, i64 64, i64 8192, i64 0, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.11, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.8, i32 0, i32 0)), !dbg !114
  %1 = tail call noalias i8* @malloc(i64 8192) #4, !dbg !114
  %2 = ptrtoint i8* %1 to i64, !dbg !115
  call void @trace_logger_log_ptr(i64 19134, i64 64, i64 %2, i64 1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.30, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.8, i32 0, i32 0)), !dbg !115
  call void @trace_logger_log0(i64 12, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.28, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.29, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.32, i32 0, i32 0), i64 47, i1 false, i1 true), !dbg !115
  %3 = ptrtoint i8* %1 to i64, !dbg !115
  call void @trace_logger_log_ptr(i64 1, i64 64, i64 %3, i64 1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.30, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.8, i32 0, i32 0)), !dbg !115
  %4 = bitcast i8* %1 to i32*, !dbg !115
  %5 = ptrtoint i32* %4 to i64, !dbg !116
  call void @trace_logger_log_ptr(i64 19134, i64 64, i64 %5, i64 1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.32, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.8, i32 0, i32 0)), !dbg !116
  call void @llvm.dbg.value(metadata i32* %4, metadata !47, metadata !DIExpression()), !dbg !116
  call void @trace_logger_log0(i64 13, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.28, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.29, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.33, i32 0, i32 0), i64 54, i1 false, i1 true), !dbg !117
  call void @trace_logger_log_ptr(i64 2, i64 64, i64 ptrtoint (i8* (i64)* @malloc to i64), i64 1, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.31, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.8, i32 0, i32 0)), !dbg !117
  call void @trace_logger_log_int(i64 1, i64 64, i64 8192, i64 0, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.11, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.8, i32 0, i32 0)), !dbg !117
  %6 = tail call noalias i8* @malloc(i64 8192) #4, !dbg !117
  %7 = ptrtoint i8* %6 to i64, !dbg !118
  call void @trace_logger_log_ptr(i64 19134, i64 64, i64 %7, i64 1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.33, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.8, i32 0, i32 0)), !dbg !118
  call void @trace_logger_log0(i64 13, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.28, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.29, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.34, i32 0, i32 0), i64 47, i1 false, i1 true), !dbg !118
  %8 = ptrtoint i8* %6 to i64, !dbg !118
  call void @trace_logger_log_ptr(i64 1, i64 64, i64 %8, i64 1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.33, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.8, i32 0, i32 0)), !dbg !118
  %9 = bitcast i8* %6 to i32*, !dbg !118
  %10 = ptrtoint i32* %9 to i64, !dbg !119
  call void @trace_logger_log_ptr(i64 19134, i64 64, i64 %10, i64 1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.34, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.8, i32 0, i32 0)), !dbg !119
  call void @llvm.dbg.value(metadata i32* %9, metadata !48, metadata !DIExpression()), !dbg !119
  call void @trace_logger_log0(i64 14, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.28, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.29, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.35, i32 0, i32 0), i64 54, i1 false, i1 true), !dbg !120
  call void @trace_logger_log_ptr(i64 2, i64 64, i64 ptrtoint (i8* (i64)* @malloc to i64), i64 1, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.31, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.8, i32 0, i32 0)), !dbg !120
  call void @trace_logger_log_int(i64 1, i64 64, i64 8192, i64 0, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.11, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.8, i32 0, i32 0)), !dbg !120
  %11 = tail call noalias i8* @malloc(i64 8192) #4, !dbg !120
  %12 = ptrtoint i8* %11 to i64, !dbg !121
  call void @trace_logger_log_ptr(i64 19134, i64 64, i64 %12, i64 1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.35, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.8, i32 0, i32 0)), !dbg !121
  call void @trace_logger_log0(i64 14, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.28, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.29, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.36, i32 0, i32 0), i64 47, i1 false, i1 true), !dbg !121
  %13 = ptrtoint i8* %11 to i64, !dbg !121
  call void @trace_logger_log_ptr(i64 1, i64 64, i64 %13, i64 1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.35, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.8, i32 0, i32 0)), !dbg !121
  %14 = bitcast i8* %11 to i32*, !dbg !121
  %15 = ptrtoint i32* %14 to i64, !dbg !122
  call void @trace_logger_log_ptr(i64 19134, i64 64, i64 %15, i64 1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.36, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.8, i32 0, i32 0)), !dbg !122
  call void @llvm.dbg.value(metadata i32* %14, metadata !49, metadata !DIExpression()), !dbg !122
  call void @trace_logger_log0(i64 16, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.28, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.29, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.12, i32 0, i32 0), i64 54, i1 false, i1 true), !dbg !123
  call void @trace_logger_log_ptr(i64 2, i64 64, i64 ptrtoint (i64 (i64*)* @time to i64), i64 1, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.37, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.8, i32 0, i32 0)), !dbg !123
  call void @trace_logger_log_ptr(i64 1, i64 64, i64 0, i64 0, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.11, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.8, i32 0, i32 0)), !dbg !123
  %16 = tail call i64 @time(i64* null) #4, !dbg !123
  call void @trace_logger_log_int(i64 19134, i64 64, i64 %16, i64 1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.12, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.8, i32 0, i32 0)), !dbg !123
  call void @trace_logger_log0(i64 16, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.28, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.29, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.14, i32 0, i32 0), i64 36, i1 false, i1 true), !dbg !123
  call void @trace_logger_log_int(i64 1, i64 64, i64 %16, i64 1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.12, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.8, i32 0, i32 0)), !dbg !123
  %17 = trunc i64 %16 to i32, !dbg !123
  %18 = zext i32 %17 to i64, !dbg !124
  call void @trace_logger_log_int(i64 19134, i64 32, i64 %18, i64 1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.14, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.8, i32 0, i32 0)), !dbg !124
  call void @trace_logger_log0(i64 16, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.28, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.29, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.38, i32 0, i32 0), i64 54, i1 false, i1 true), !dbg !124
  call void @trace_logger_log_ptr(i64 2, i64 64, i64 ptrtoint (void (i32)* @srand to i64), i64 1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.39, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.8, i32 0, i32 0)), !dbg !124
  %19 = zext i32 %17 to i64, !dbg !124
  call void @trace_logger_log_int(i64 1, i64 32, i64 %19, i64 1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.14, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.8, i32 0, i32 0)), !dbg !124
  tail call void @srand(i32 %17) #4, !dbg !124
  call void @llvm.dbg.value(metadata i32 0, metadata !50, metadata !DIExpression()), !dbg !125
  call void @trace_logger_log0(i64 17, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.28, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.29, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.40, i32 0, i32 0), i64 2, i1 false, i1 true), !dbg !126
  call void @trace_logger_log_int(i64 1, i64 0, i64 0, i64 1, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.41, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.8, i32 0, i32 0)), !dbg !126
  br label %20, !dbg !126

; <label>:20:                                     ; preds = %20, %0
  %21 = phi i64 [ 0, %0 ], [ %40, %20 ]
  call void @trace_logger_log0(i64 -1, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.28, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.41, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9, i32 0, i32 0), i64 53, i1 false, i1 true), !dbg !125
  call void @trace_logger_log_int(i64 2, i64 64, i64 0, i64 1, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.42, i32 0, i32 0), i64 1, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.41, i32 0, i32 0)), !dbg !125
  call void @trace_logger_log_int(i64 1, i64 64, i64 0, i64 0, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.11, i32 0, i32 0), i64 1, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.29, i32 0, i32 0)), !dbg !125
  call void @trace_logger_log_int(i64 19134, i64 64, i64 %21, i64 1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.29, i32 0, i32 0)), !dbg !125
  call void @llvm.dbg.value(metadata i64 %21, metadata !50, metadata !DIExpression()), !dbg !125
  call void @trace_logger_log0(i64 18, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.28, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.41, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.18, i32 0, i32 0), i64 32, i1 false, i1 true), !dbg !128
  call void @trace_logger_log_int(i64 2, i64 64, i64 %21, i64 1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.8, i32 0, i32 0)), !dbg !128
  %22 = ptrtoint i32* %14 to i64, !dbg !128
  call void @trace_logger_log_ptr(i64 1, i64 64, i64 %22, i64 1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.36, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.8, i32 0, i32 0)), !dbg !128
  %23 = getelementptr inbounds i32, i32* %14, i64 %21, !dbg !128
  %24 = ptrtoint i32* %23 to i64, !dbg !131
  call void @trace_logger_log_ptr(i64 19134, i64 64, i64 %24, i64 1, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.18, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.8, i32 0, i32 0)), !dbg !131
  call void @trace_logger_log0(i64 18, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.28, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.41, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.43, i32 0, i32 0), i64 31, i1 false, i1 true), !dbg !131
  %25 = ptrtoint i32* %23 to i64, !dbg !131
  call void @trace_logger_log_ptr(i64 2, i64 64, i64 %25, i64 1, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.18, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.8, i32 0, i32 0)), !dbg !131
  call void @trace_logger_log_int(i64 1, i64 32, i64 0, i64 1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.8, i32 0, i32 0)), !dbg !131
  store i32 0, i32* %23, align 4, !dbg !131, !tbaa !29
  call void @trace_logger_log0(i64 19, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.28, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.41, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.20, i32 0, i32 0), i64 54, i1 false, i1 true), !dbg !132
  call void @trace_logger_log_ptr(i64 1, i64 64, i64 ptrtoint (i32 ()* @rand to i64), i64 1, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.44, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.8, i32 0, i32 0)), !dbg !132
  %26 = tail call i32 @rand() #4, !dbg !132
  %27 = zext i32 %26 to i64, !dbg !133
  call void @trace_logger_log_int(i64 19134, i64 32, i64 %27, i64 1, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.20, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.8, i32 0, i32 0)), !dbg !133
  call void @trace_logger_log0(i64 19, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.28, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.41, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.21, i32 0, i32 0), i64 32, i1 false, i1 true), !dbg !133
  call void @trace_logger_log_int(i64 2, i64 64, i64 %21, i64 1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.8, i32 0, i32 0)), !dbg !133
  %28 = ptrtoint i32* %4 to i64, !dbg !133
  call void @trace_logger_log_ptr(i64 1, i64 64, i64 %28, i64 1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.32, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.8, i32 0, i32 0)), !dbg !133
  %29 = getelementptr inbounds i32, i32* %4, i64 %21, !dbg !133
  %30 = ptrtoint i32* %29 to i64, !dbg !134
  call void @trace_logger_log_ptr(i64 19134, i64 64, i64 %30, i64 1, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.21, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.8, i32 0, i32 0)), !dbg !134
  call void @trace_logger_log0(i64 19, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.28, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.41, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.45, i32 0, i32 0), i64 31, i1 false, i1 true), !dbg !134
  %31 = ptrtoint i32* %29 to i64, !dbg !134
  call void @trace_logger_log_ptr(i64 2, i64 64, i64 %31, i64 1, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.21, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.8, i32 0, i32 0)), !dbg !134
  %32 = zext i32 %26 to i64, !dbg !134
  call void @trace_logger_log_int(i64 1, i64 32, i64 %32, i64 1, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.20, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.8, i32 0, i32 0)), !dbg !134
  store i32 %26, i32* %29, align 4, !dbg !134, !tbaa !29
  call void @trace_logger_log0(i64 20, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.28, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.41, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.10, i32 0, i32 0), i64 54, i1 false, i1 true), !dbg !135
  call void @trace_logger_log_ptr(i64 1, i64 64, i64 ptrtoint (i32 ()* @rand to i64), i64 1, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.44, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.8, i32 0, i32 0)), !dbg !135
  %33 = tail call i32 @rand() #4, !dbg !135
  %34 = zext i32 %33 to i64, !dbg !136
  call void @trace_logger_log_int(i64 19134, i64 32, i64 %34, i64 1, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.10, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.8, i32 0, i32 0)), !dbg !136
  call void @trace_logger_log0(i64 20, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.28, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.41, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.24, i32 0, i32 0), i64 32, i1 false, i1 true), !dbg !136
  call void @trace_logger_log_int(i64 2, i64 64, i64 %21, i64 1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.8, i32 0, i32 0)), !dbg !136
  %35 = ptrtoint i32* %9 to i64, !dbg !136
  call void @trace_logger_log_ptr(i64 1, i64 64, i64 %35, i64 1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.34, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.8, i32 0, i32 0)), !dbg !136
  %36 = getelementptr inbounds i32, i32* %9, i64 %21, !dbg !136
  %37 = ptrtoint i32* %36 to i64, !dbg !137
  call void @trace_logger_log_ptr(i64 19134, i64 64, i64 %37, i64 1, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.24, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.8, i32 0, i32 0)), !dbg !137
  call void @trace_logger_log0(i64 20, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.28, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.41, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.46, i32 0, i32 0), i64 31, i1 false, i1 true), !dbg !137
  %38 = ptrtoint i32* %36 to i64, !dbg !137
  call void @trace_logger_log_ptr(i64 2, i64 64, i64 %38, i64 1, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.24, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.8, i32 0, i32 0)), !dbg !137
  %39 = zext i32 %33 to i64, !dbg !137
  call void @trace_logger_log_int(i64 1, i64 32, i64 %39, i64 1, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.10, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.8, i32 0, i32 0)), !dbg !137
  store i32 %33, i32* %36, align 4, !dbg !137, !tbaa !29
  call void @trace_logger_log0(i64 17, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.28, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.41, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.42, i32 0, i32 0), i64 11, i1 false, i1 true), !dbg !138
  call void @trace_logger_log_int(i64 2, i64 64, i64 1, i64 0, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.11, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.8, i32 0, i32 0)), !dbg !138
  call void @trace_logger_log_int(i64 1, i64 64, i64 %21, i64 1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.8, i32 0, i32 0)), !dbg !138
  %40 = add nuw nsw i64 %21, 1, !dbg !138
  call void @trace_logger_log_int(i64 19134, i64 64, i64 %40, i64 1, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.42, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.8, i32 0, i32 0)), !dbg !139
  call void @trace_logger_log0(i64 17, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.28, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.41, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.47, i32 0, i32 0), i64 51, i1 false, i1 true), !dbg !139
  call void @trace_logger_log_int(i64 2, i64 64, i64 2048, i64 0, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.11, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.8, i32 0, i32 0)), !dbg !139
  call void @trace_logger_log_int(i64 1, i64 64, i64 %40, i64 1, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.42, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.8, i32 0, i32 0)), !dbg !139
  %41 = icmp eq i64 %40, 2048, !dbg !139
  %42 = zext i1 %41 to i64, !dbg !126
  call void @trace_logger_log_int(i64 19134, i64 1, i64 %42, i64 1, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.47, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.8, i32 0, i32 0)), !dbg !126
  call void @trace_logger_log0(i64 17, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.28, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.41, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.48, i32 0, i32 0), i64 2, i1 false, i1 true), !dbg !126
  call void @trace_logger_log_int(i64 3, i64 0, i64 0, i64 1, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.49, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.8, i32 0, i32 0)), !dbg !126
  call void @trace_logger_log_int(i64 2, i64 0, i64 0, i64 1, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.41, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.8, i32 0, i32 0)), !dbg !126
  %43 = zext i1 %41 to i64, !dbg !126
  call void @trace_logger_log_int(i64 1, i64 1, i64 %43, i64 1, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.47, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.8, i32 0, i32 0)), !dbg !126
  br i1 %41, label %44, label %20, !dbg !126, !llvm.loop !140

; <label>:44:                                     ; preds = %20
  call void @trace_logger_log0(i64 23, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.28, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.49, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.50, i32 0, i32 0), i64 54, i1 false, i1 true), !dbg !142
  call void @trace_logger_log_ptr(i64 5, i64 64, i64 ptrtoint (void (i32*, i32*, i32*, i32)* @triad to i64), i64 1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.4, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.8, i32 0, i32 0)), !dbg !142
  %45 = ptrtoint i32* %4 to i64, !dbg !142
  call void @trace_logger_log_ptr(i64 1, i64 64, i64 %45, i64 1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.32, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.8, i32 0, i32 0)), !dbg !142
  %46 = ptrtoint i32* %9 to i64, !dbg !142
  call void @trace_logger_log_ptr(i64 2, i64 64, i64 %46, i64 1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.34, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.8, i32 0, i32 0)), !dbg !142
  %47 = ptrtoint i32* %14 to i64, !dbg !142
  call void @trace_logger_log_ptr(i64 3, i64 64, i64 %47, i64 1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.36, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.8, i32 0, i32 0)), !dbg !142
  call void @trace_logger_log_int(i64 4, i64 32, i64 3, i64 0, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.11, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.8, i32 0, i32 0)), !dbg !142
  tail call void @triad(i32* nonnull %4, i32* nonnull %9, i32* nonnull %14, i32 3) #5, !dbg !142
  call void @trace_logger_log0(i64 26, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.28, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.49, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.51, i32 0, i32 0), i64 54, i1 false, i1 true), !dbg !143
  call void @trace_logger_log_ptr(i64 3, i64 64, i64 ptrtoint (%struct._IO_FILE* (i8*, i8*)* @fopen to i64), i64 1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.52, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.8, i32 0, i32 0)), !dbg !143
  call void @trace_logger_log_string(i64 1, i64 64, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.53, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.11, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.8, i32 0, i32 0)), !dbg !143
  call void @trace_logger_log_string(i64 2, i64 64, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.54, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.11, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.8, i32 0, i32 0)), !dbg !143
  %48 = tail call %struct._IO_FILE* @fopen(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #4, !dbg !143
  %49 = ptrtoint %struct._IO_FILE* %48 to i64, !dbg !144
  call void @trace_logger_log_ptr(i64 19134, i64 64, i64 %49, i64 1, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.51, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.8, i32 0, i32 0)), !dbg !144
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %48, metadata !51, metadata !DIExpression()), !dbg !144
  call void @llvm.dbg.value(metadata i32 0, metadata !50, metadata !DIExpression()), !dbg !125
  call void @trace_logger_log0(i64 27, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.28, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.49, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.55, i32 0, i32 0), i64 2, i1 false, i1 true), !dbg !145
  call void @trace_logger_log_int(i64 1, i64 0, i64 0, i64 1, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.56, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.8, i32 0, i32 0)), !dbg !145
  br label %50, !dbg !145

; <label>:50:                                     ; preds = %50, %44
  %51 = phi i64 [ 0, %44 ], [ %61, %50 ]
  call void @trace_logger_log0(i64 -1, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.28, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.56, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9, i32 0, i32 0), i64 53, i1 false, i1 true), !dbg !125
  call void @trace_logger_log_int(i64 2, i64 64, i64 0, i64 1, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.57, i32 0, i32 0), i64 1, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.56, i32 0, i32 0)), !dbg !125
  call void @trace_logger_log_int(i64 1, i64 64, i64 0, i64 0, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.11, i32 0, i32 0), i64 1, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.49, i32 0, i32 0)), !dbg !125
  call void @trace_logger_log_int(i64 19134, i64 64, i64 %51, i64 1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.49, i32 0, i32 0)), !dbg !125
  call void @llvm.dbg.value(metadata i64 %51, metadata !50, metadata !DIExpression()), !dbg !125
  call void @trace_logger_log0(i64 28, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.28, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.56, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.58, i32 0, i32 0), i64 32, i1 false, i1 true), !dbg !147
  call void @trace_logger_log_int(i64 2, i64 64, i64 %51, i64 1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.8, i32 0, i32 0)), !dbg !147
  %52 = ptrtoint i32* %14 to i64, !dbg !147
  call void @trace_logger_log_ptr(i64 1, i64 64, i64 %52, i64 1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.36, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.8, i32 0, i32 0)), !dbg !147
  %53 = getelementptr inbounds i32, i32* %14, i64 %51, !dbg !147
  %54 = ptrtoint i32* %53 to i64, !dbg !147
  call void @trace_logger_log_ptr(i64 19134, i64 64, i64 %54, i64 1, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.58, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.8, i32 0, i32 0)), !dbg !147
  call void @trace_logger_log0(i64 28, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.28, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.56, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.59, i32 0, i32 0), i64 30, i1 false, i1 true), !dbg !147
  %55 = ptrtoint i32* %53 to i64, !dbg !147
  call void @trace_logger_log_ptr(i64 1, i64 64, i64 %55, i64 1, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.58, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.8, i32 0, i32 0)), !dbg !147
  %56 = load i32, i32* %53, align 4, !dbg !147, !tbaa !29
  %57 = zext i32 %56 to i64, !dbg !149
  call void @trace_logger_log_int(i64 19134, i64 32, i64 %57, i64 1, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.59, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.8, i32 0, i32 0)), !dbg !149
  call void @trace_logger_log0(i64 28, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.28, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.56, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.60, i32 0, i32 0), i64 54, i1 false, i1 true), !dbg !149
  call void @trace_logger_log_ptr(i64 4, i64 64, i64 ptrtoint (i32 (%struct._IO_FILE*, i8*, ...)* @fprintf to i64), i64 1, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.61, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.8, i32 0, i32 0)), !dbg !149
  %58 = ptrtoint %struct._IO_FILE* %48 to i64, !dbg !149
  call void @trace_logger_log_ptr(i64 1, i64 64, i64 %58, i64 1, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.51, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.8, i32 0, i32 0)), !dbg !149
  call void @trace_logger_log_string(i64 2, i64 64, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.62, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.11, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.8, i32 0, i32 0)), !dbg !149
  %59 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %48, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2, i64 0, i64 0), i32 %56) #4, !dbg !149
  %60 = zext i32 %59 to i64, !dbg !150
  call void @trace_logger_log_int(i64 19134, i64 32, i64 %60, i64 1, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.60, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.8, i32 0, i32 0)), !dbg !150
  call void @trace_logger_log0(i64 27, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.28, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.56, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.57, i32 0, i32 0), i64 11, i1 false, i1 true), !dbg !150
  call void @trace_logger_log_int(i64 2, i64 64, i64 1, i64 0, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.11, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.8, i32 0, i32 0)), !dbg !150
  call void @trace_logger_log_int(i64 1, i64 64, i64 %51, i64 1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.8, i32 0, i32 0)), !dbg !150
  %61 = add nuw nsw i64 %51, 1, !dbg !150
  call void @trace_logger_log_int(i64 19134, i64 64, i64 %61, i64 1, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.57, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.8, i32 0, i32 0)), !dbg !151
  call void @trace_logger_log0(i64 27, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.28, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.56, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.63, i32 0, i32 0), i64 51, i1 false, i1 true), !dbg !151
  call void @trace_logger_log_int(i64 2, i64 64, i64 2048, i64 0, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.11, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.8, i32 0, i32 0)), !dbg !151
  call void @trace_logger_log_int(i64 1, i64 64, i64 %61, i64 1, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.57, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.8, i32 0, i32 0)), !dbg !151
  %62 = icmp eq i64 %61, 2048, !dbg !151
  %63 = zext i1 %62 to i64, !dbg !145
  call void @trace_logger_log_int(i64 19134, i64 1, i64 %63, i64 1, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.63, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.8, i32 0, i32 0)), !dbg !145
  call void @trace_logger_log0(i64 27, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.28, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.56, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.64, i32 0, i32 0), i64 2, i1 false, i1 true), !dbg !145
  call void @trace_logger_log_int(i64 3, i64 0, i64 0, i64 1, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.65, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.8, i32 0, i32 0)), !dbg !145
  call void @trace_logger_log_int(i64 2, i64 0, i64 0, i64 1, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.56, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.8, i32 0, i32 0)), !dbg !145
  %64 = zext i1 %62 to i64, !dbg !145
  call void @trace_logger_log_int(i64 1, i64 1, i64 %64, i64 1, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.63, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.8, i32 0, i32 0)), !dbg !145
  br i1 %62, label %65, label %50, !dbg !145, !llvm.loop !152

; <label>:65:                                     ; preds = %50
  call void @trace_logger_log0(i64 29, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.28, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.65, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.66, i32 0, i32 0), i64 54, i1 false, i1 true), !dbg !154
  call void @trace_logger_log_ptr(i64 3, i64 64, i64 ptrtoint (i32 (%struct._IO_FILE*, i8*, ...)* @fprintf to i64), i64 1, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.61, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.8, i32 0, i32 0)), !dbg !154
  %66 = ptrtoint %struct._IO_FILE* %48 to i64, !dbg !154
  call void @trace_logger_log_ptr(i64 1, i64 64, i64 %66, i64 1, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.51, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.8, i32 0, i32 0)), !dbg !154
  call void @trace_logger_log_string(i64 2, i64 64, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.67, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.11, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.8, i32 0, i32 0)), !dbg !154
  %67 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %48, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0)) #4, !dbg !154
  %68 = zext i32 %67 to i64, !dbg !155
  call void @trace_logger_log_int(i64 19134, i64 32, i64 %68, i64 1, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.66, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.8, i32 0, i32 0)), !dbg !155
  call void @trace_logger_log0(i64 30, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.28, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.65, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.68, i32 0, i32 0), i64 54, i1 false, i1 true), !dbg !155
  call void @trace_logger_log_ptr(i64 2, i64 64, i64 ptrtoint (i32 (%struct._IO_FILE*)* @fclose to i64), i64 1, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.69, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.8, i32 0, i32 0)), !dbg !155
  %69 = ptrtoint %struct._IO_FILE* %48 to i64, !dbg !155
  call void @trace_logger_log_ptr(i64 1, i64 64, i64 %69, i64 1, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.51, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.8, i32 0, i32 0)), !dbg !155
  %70 = tail call i32 @fclose(%struct._IO_FILE* %48) #4, !dbg !155
  %71 = zext i32 %70 to i64, !dbg !156
  call void @trace_logger_log_int(i64 19134, i64 32, i64 %71, i64 1, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.68, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.8, i32 0, i32 0)), !dbg !156
  call void @trace_logger_log0(i64 31, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.28, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.65, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.70, i32 0, i32 0), i64 1, i1 false, i1 true), !dbg !156
  call void @trace_logger_log_int(i64 1, i64 32, i64 0, i64 1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.8, i32 0, i32 0)), !dbg !156
  call void @trace_logger_update_status(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.28, i32 0, i32 0), i64 1, i1 false, i1 true), !dbg !156
  ret i32 0, !dbg !156
}

; Function Attrs: nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #2

; Function Attrs: nounwind
declare i64 @time(i64*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @srand(i32) local_unnamed_addr #2

; Function Attrs: nounwind
declare i32 @rand() local_unnamed_addr #2

declare %struct._IO_FILE* @fopen(i8*, i8*) local_unnamed_addr #3

declare i32 @fprintf(%struct._IO_FILE*, i8*, ...) local_unnamed_addr #3

declare i32 @fclose(%struct._IO_FILE*) local_unnamed_addr #3

declare void @trace_logger_log_entry(i8*, i64)

declare void @trace_logger_log0(i64, i8*, i8*, i8*, i64, i1, i1)

declare void @trace_logger_log_int(i64, i64, i64, i64, i8*, i64, i8*)

declare void @trace_logger_log_ptr(i64, i64, i64, i64, i8*, i64, i8*)

declare void @trace_logger_log_string(i64, i64, i8*, i64, i8*, i64, i8*)

declare void @trace_logger_log_double(i64, i64, double, i64, i8*, i64, i8*)

declare void @trace_logger_log_vector(i64, i64, i8*, i64, i8*, i64, i8*)

declare void @trace_logger_update_status(i8*, i64, i1, i1)

attributes #0 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind }
attributes #5 = { nobuiltin }

!llvm.dbg.cu = !{!0}
!llvm.ident = !{!6}
!llvm.module.flags = !{!7, !8, !9}

!0 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1, producer: "clang version 6.0.0 (tags/RELEASE_600/final)", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2, retainedTypes: !3)
!1 = !DIFile(filename: "/workspace/LLVM-Tracer/example/triad/triad.c", directory: "/workspace/LLVM-Tracer/build/example/triad")
!2 = !{}
!3 = !{!4}
!4 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5, size: 64)
!5 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!6 = !{!"clang version 6.0.0 (tags/RELEASE_600/final)"}
!7 = !{i32 2, !"Dwarf Version", i32 4}
!8 = !{i32 2, !"Debug Info Version", i32 3}
!9 = !{i32 1, !"wchar_size", i32 4}
!10 = distinct !DISubprogram(name: "triad", scope: !1, file: !1, line: 3, type: !11, isLocal: false, isDefinition: true, scopeLine: 3, flags: DIFlagPrototyped, isOptimized: true, unit: !0, variables: !13)
!11 = !DISubroutineType(types: !12)
!12 = !{null, !4, !4, !4, !5}
!13 = !{!14, !15, !16, !17, !18}
!14 = !DILocalVariable(name: "a", arg: 1, scope: !10, file: !1, line: 3, type: !4)
!15 = !DILocalVariable(name: "b", arg: 2, scope: !10, file: !1, line: 3, type: !4)
!16 = !DILocalVariable(name: "c", arg: 3, scope: !10, file: !1, line: 3, type: !4)
!17 = !DILocalVariable(name: "s", arg: 4, scope: !10, file: !1, line: 3, type: !5)
!18 = !DILocalVariable(name: "i", scope: !10, file: !1, line: 4, type: !5)
!19 = !DILocation(line: 3, column: 17, scope: !10)
!20 = !DILocation(line: 3, column: 24, scope: !10)
!21 = !DILocation(line: 3, column: 32, scope: !10)
!22 = !DILocation(line: 3, column: 39, scope: !10)
!23 = !DILocation(line: 4, column: 6, scope: !10)
!24 = !DILocation(line: 5, column: 7, scope: !25)
!25 = distinct !DILexicalBlock(scope: !10, file: !1, line: 5, column: 7)
!26 = !DILocation(line: 6, column: 10, scope: !27)
!27 = distinct !DILexicalBlock(scope: !28, file: !1, line: 5, column: 25)
!28 = distinct !DILexicalBlock(scope: !25, file: !1, line: 5, column: 7)
!29 = !{!30, !30, i64 0}
!30 = !{!"int", !31, i64 0}
!31 = !{!"omnipotent char", !32, i64 0}
!32 = !{!"Simple C/C++ TBAA"}
!33 = !DILocation(line: 6, column: 19, scope: !27)
!34 = !DILocation(line: 6, column: 18, scope: !27)
!35 = !DILocation(line: 6, column: 15, scope: !27)
!36 = !DILocation(line: 6, column: 3, scope: !27)
!37 = !DILocation(line: 6, column: 8, scope: !27)
!38 = !DILocation(line: 5, column: 22, scope: !28)
!39 = !DILocation(line: 5, column: 16, scope: !28)
!40 = distinct !{!40, !24, !41}
!41 = !DILocation(line: 7, column: 2, scope: !25)
!42 = !DILocation(line: 8, column: 1, scope: !10)
!43 = distinct !DISubprogram(name: "main", scope: !1, file: !1, line: 10, type: !44, isLocal: false, isDefinition: true, scopeLine: 10, isOptimized: true, unit: !0, variables: !46)
!44 = !DISubroutineType(types: !45)
!45 = !{!5}
!46 = !{!47, !48, !49, !50, !51}
!47 = !DILocalVariable(name: "a", scope: !43, file: !1, line: 11, type: !4)
!48 = !DILocalVariable(name: "b", scope: !43, file: !1, line: 11, type: !4)
!49 = !DILocalVariable(name: "c", scope: !43, file: !1, line: 11, type: !4)
!50 = !DILocalVariable(name: "i", scope: !43, file: !1, line: 15, type: !5)
!51 = !DILocalVariable(name: "output", scope: !43, file: !1, line: 25, type: !52)
!52 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !53, size: 64)
!53 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !54, line: 7, baseType: !55)
!54 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/FILE.h", directory: "/workspace/LLVM-Tracer/build/example/triad")
!55 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !56, line: 245, size: 1728, elements: !57)
!56 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/libio.h", directory: "/workspace/LLVM-Tracer/build/example/triad")
!57 = !{!58, !59, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !80, !81, !82, !83, !87, !89, !91, !95, !98, !100, !102, !103, !104, !105, !109, !110}
!58 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !55, file: !56, line: 246, baseType: !5, size: 32)
!59 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !55, file: !56, line: 251, baseType: !60, size: 64, offset: 64)
!60 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !61, size: 64)
!61 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!62 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !55, file: !56, line: 252, baseType: !60, size: 64, offset: 128)
!63 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !55, file: !56, line: 253, baseType: !60, size: 64, offset: 192)
!64 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !55, file: !56, line: 254, baseType: !60, size: 64, offset: 256)
!65 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !55, file: !56, line: 255, baseType: !60, size: 64, offset: 320)
!66 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !55, file: !56, line: 256, baseType: !60, size: 64, offset: 384)
!67 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !55, file: !56, line: 257, baseType: !60, size: 64, offset: 448)
!68 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !55, file: !56, line: 258, baseType: !60, size: 64, offset: 512)
!69 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !55, file: !56, line: 260, baseType: !60, size: 64, offset: 576)
!70 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !55, file: !56, line: 261, baseType: !60, size: 64, offset: 640)
!71 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !55, file: !56, line: 262, baseType: !60, size: 64, offset: 704)
!72 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !55, file: !56, line: 264, baseType: !73, size: 64, offset: 768)
!73 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !74, size: 64)
!74 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_marker", file: !56, line: 160, size: 192, elements: !75)
!75 = !{!76, !77, !79}
!76 = !DIDerivedType(tag: DW_TAG_member, name: "_next", scope: !74, file: !56, line: 161, baseType: !73, size: 64)
!77 = !DIDerivedType(tag: DW_TAG_member, name: "_sbuf", scope: !74, file: !56, line: 162, baseType: !78, size: 64, offset: 64)
!78 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !55, size: 64)
!79 = !DIDerivedType(tag: DW_TAG_member, name: "_pos", scope: !74, file: !56, line: 166, baseType: !5, size: 32, offset: 128)
!80 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !55, file: !56, line: 266, baseType: !78, size: 64, offset: 832)
!81 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !55, file: !56, line: 268, baseType: !5, size: 32, offset: 896)
!82 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !55, file: !56, line: 272, baseType: !5, size: 32, offset: 928)
!83 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !55, file: !56, line: 274, baseType: !84, size: 64, offset: 960)
!84 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off_t", file: !85, line: 140, baseType: !86)
!85 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types.h", directory: "/workspace/LLVM-Tracer/build/example/triad")
!86 = !DIBasicType(name: "long int", size: 64, encoding: DW_ATE_signed)
!87 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !55, file: !56, line: 278, baseType: !88, size: 16, offset: 1024)
!88 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!89 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !55, file: !56, line: 279, baseType: !90, size: 8, offset: 1040)
!90 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!91 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !55, file: !56, line: 280, baseType: !92, size: 8, offset: 1048)
!92 = !DICompositeType(tag: DW_TAG_array_type, baseType: !61, size: 8, elements: !93)
!93 = !{!94}
!94 = !DISubrange(count: 1)
!95 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !55, file: !56, line: 284, baseType: !96, size: 64, offset: 1088)
!96 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !97, size: 64)
!97 = !DIDerivedType(tag: DW_TAG_typedef, name: "_IO_lock_t", file: !56, line: 154, baseType: null)
!98 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !55, file: !56, line: 293, baseType: !99, size: 64, offset: 1152)
!99 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off64_t", file: !85, line: 141, baseType: !86)
!100 = !DIDerivedType(tag: DW_TAG_member, name: "__pad1", scope: !55, file: !56, line: 301, baseType: !101, size: 64, offset: 1216)
!101 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!102 = !DIDerivedType(tag: DW_TAG_member, name: "__pad2", scope: !55, file: !56, line: 302, baseType: !101, size: 64, offset: 1280)
!103 = !DIDerivedType(tag: DW_TAG_member, name: "__pad3", scope: !55, file: !56, line: 303, baseType: !101, size: 64, offset: 1344)
!104 = !DIDerivedType(tag: DW_TAG_member, name: "__pad4", scope: !55, file: !56, line: 304, baseType: !101, size: 64, offset: 1408)
!105 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !55, file: !56, line: 306, baseType: !106, size: 64, offset: 1472)
!106 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !107, line: 62, baseType: !108)
!107 = !DIFile(filename: "/usr/local/lib/clang/6.0.0/include/stddef.h", directory: "/workspace/LLVM-Tracer/build/example/triad")
!108 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!109 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !55, file: !56, line: 307, baseType: !5, size: 32, offset: 1536)
!110 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !55, file: !56, line: 309, baseType: !111, size: 160, offset: 1568)
!111 = !DICompositeType(tag: DW_TAG_array_type, baseType: !61, size: 160, elements: !112)
!112 = !{!113}
!113 = !DISubrange(count: 20)
!114 = !DILocation(line: 12, column: 17, scope: !43)
!115 = !DILocation(line: 12, column: 9, scope: !43)
!116 = !DILocation(line: 11, column: 7, scope: !43)
!117 = !DILocation(line: 13, column: 17, scope: !43)
!118 = !DILocation(line: 13, column: 9, scope: !43)
!119 = !DILocation(line: 11, column: 11, scope: !43)
!120 = !DILocation(line: 14, column: 17, scope: !43)
!121 = !DILocation(line: 14, column: 9, scope: !43)
!122 = !DILocation(line: 11, column: 15, scope: !43)
!123 = !DILocation(line: 16, column: 9, scope: !43)
!124 = !DILocation(line: 16, column: 3, scope: !43)
!125 = !DILocation(line: 15, column: 6, scope: !43)
!126 = !DILocation(line: 17, column: 7, scope: !127)
!127 = distinct !DILexicalBlock(scope: !43, file: !1, line: 17, column: 7)
!128 = !DILocation(line: 18, column: 3, scope: !129)
!129 = distinct !DILexicalBlock(scope: !130, file: !1, line: 17, column: 27)
!130 = distinct !DILexicalBlock(scope: !127, file: !1, line: 17, column: 7)
!131 = !DILocation(line: 18, column: 8, scope: !129)
!132 = !DILocation(line: 19, column: 10, scope: !129)
!133 = !DILocation(line: 19, column: 3, scope: !129)
!134 = !DILocation(line: 19, column: 8, scope: !129)
!135 = !DILocation(line: 20, column: 10, scope: !129)
!136 = !DILocation(line: 20, column: 3, scope: !129)
!137 = !DILocation(line: 20, column: 8, scope: !129)
!138 = !DILocation(line: 17, column: 24, scope: !130)
!139 = !DILocation(line: 17, column: 17, scope: !130)
!140 = distinct !{!140, !126, !141}
!141 = !DILocation(line: 21, column: 2, scope: !127)
!142 = !DILocation(line: 23, column: 2, scope: !43)
!143 = !DILocation(line: 26, column: 12, scope: !43)
!144 = !DILocation(line: 25, column: 9, scope: !43)
!145 = !DILocation(line: 27, column: 2, scope: !146)
!146 = distinct !DILexicalBlock(scope: !43, file: !1, line: 27, column: 2)
!147 = !DILocation(line: 28, column: 28, scope: !148)
!148 = distinct !DILexicalBlock(scope: !146, file: !1, line: 27, column: 2)
!149 = !DILocation(line: 28, column: 5, scope: !148)
!150 = !DILocation(line: 27, column: 19, scope: !148)
!151 = !DILocation(line: 27, column: 12, scope: !148)
!152 = distinct !{!152, !145, !153}
!153 = !DILocation(line: 28, column: 32, scope: !146)
!154 = !DILocation(line: 29, column: 3, scope: !43)
!155 = !DILocation(line: 30, column: 3, scope: !43)
!156 = !DILocation(line: 31, column: 2, scope: !43)
