; ModuleID = 'triad.c'
source_filename = "triad.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, i8*, i8*, i8*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type { %struct._IO_marker*, %struct._IO_FILE*, i32 }

@.str = private unnamed_addr constant [12 x i8] c"output.data\00", align 1
@.str.1 = private unnamed_addr constant [2 x i8] c"w\00", align 1
@.str.2 = private unnamed_addr constant [4 x i8] c"%d,\00", align 1

; Function Attrs: noinline nounwind uwtable
define void @triad(i32* nocapture readonly, i32* nocapture readonly, i32* nocapture, i32) local_unnamed_addr #0 !dbg !10 {
  call void @llvm.dbg.value(metadata i32* %0, metadata !14, metadata !DIExpression()), !dbg !19
  call void @llvm.dbg.value(metadata i32* %1, metadata !15, metadata !DIExpression()), !dbg !20
  call void @llvm.dbg.value(metadata i32* %2, metadata !16, metadata !DIExpression()), !dbg !21
  call void @llvm.dbg.value(metadata i32 %3, metadata !17, metadata !DIExpression()), !dbg !22
  call void @llvm.dbg.value(metadata i32 0, metadata !18, metadata !DIExpression()), !dbg !23
  br label %5, !dbg !24

; <label>:5:                                      ; preds = %5, %4
  %6 = phi i64 [ 0, %4 ], [ %14, %5 ]
  call void @llvm.dbg.value(metadata i64 %6, metadata !18, metadata !DIExpression()), !dbg !23
  %7 = getelementptr inbounds i32, i32* %0, i64 %6, !dbg !26
  %8 = load i32, i32* %7, align 4, !dbg !26, !tbaa !29
  %9 = getelementptr inbounds i32, i32* %1, i64 %6, !dbg !33
  %10 = load i32, i32* %9, align 4, !dbg !33, !tbaa !29
  %11 = mul nsw i32 %10, %3, !dbg !34
  %12 = add nsw i32 %11, %8, !dbg !35
  %13 = getelementptr inbounds i32, i32* %2, i64 %6, !dbg !36
  store i32 %12, i32* %13, align 4, !dbg !37, !tbaa !29
  %14 = add nuw nsw i64 %6, 1, !dbg !38
  %15 = icmp eq i64 %14, 2048, !dbg !39
  br i1 %15, label %16, label %5, !dbg !24, !llvm.loop !40

; <label>:16:                                     ; preds = %5
  ret void, !dbg !42
}

; Function Attrs: noinline nounwind uwtable
define i32 @main() local_unnamed_addr #0 !dbg !43 {
  %1 = tail call noalias i8* @malloc(i64 8192) #3, !dbg !114
  %2 = bitcast i8* %1 to i32*, !dbg !115
  call void @llvm.dbg.value(metadata i32* %2, metadata !47, metadata !DIExpression()), !dbg !116
  %3 = tail call noalias i8* @malloc(i64 8192) #3, !dbg !117
  %4 = bitcast i8* %3 to i32*, !dbg !118
  call void @llvm.dbg.value(metadata i32* %4, metadata !48, metadata !DIExpression()), !dbg !119
  %5 = tail call noalias i8* @malloc(i64 8192) #3, !dbg !120
  %6 = bitcast i8* %5 to i32*, !dbg !121
  call void @llvm.dbg.value(metadata i32* %6, metadata !49, metadata !DIExpression()), !dbg !122
  %7 = tail call i64 @time(i64* null) #3, !dbg !123
  %8 = trunc i64 %7 to i32, !dbg !123
  tail call void @srand(i32 %8) #3, !dbg !124
  call void @llvm.dbg.value(metadata i32 0, metadata !50, metadata !DIExpression()), !dbg !125
  br label %9, !dbg !126

; <label>:9:                                      ; preds = %9, %0
  %10 = phi i64 [ 0, %0 ], [ %16, %9 ]
  call void @llvm.dbg.value(metadata i64 %10, metadata !50, metadata !DIExpression()), !dbg !125
  %11 = getelementptr inbounds i32, i32* %6, i64 %10, !dbg !128
  store i32 0, i32* %11, align 4, !dbg !131, !tbaa !29
  %12 = tail call i32 @rand() #3, !dbg !132
  %13 = getelementptr inbounds i32, i32* %2, i64 %10, !dbg !133
  store i32 %12, i32* %13, align 4, !dbg !134, !tbaa !29
  %14 = tail call i32 @rand() #3, !dbg !135
  %15 = getelementptr inbounds i32, i32* %4, i64 %10, !dbg !136
  store i32 %14, i32* %15, align 4, !dbg !137, !tbaa !29
  %16 = add nuw nsw i64 %10, 1, !dbg !138
  %17 = icmp eq i64 %16, 2048, !dbg !139
  br i1 %17, label %18, label %9, !dbg !126, !llvm.loop !140

; <label>:18:                                     ; preds = %9
  tail call void @triad(i32* nonnull %2, i32* nonnull %4, i32* nonnull %6, i32 3), !dbg !142
  %19 = tail call %struct._IO_FILE* @fopen(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !143
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %19, metadata !51, metadata !DIExpression()), !dbg !144
  call void @llvm.dbg.value(metadata i32 0, metadata !50, metadata !DIExpression()), !dbg !125
  br label %20, !dbg !145

; <label>:20:                                     ; preds = %20, %18
  %21 = phi i64 [ 0, %18 ], [ %25, %20 ]
  call void @llvm.dbg.value(metadata i64 %21, metadata !50, metadata !DIExpression()), !dbg !125
  %22 = getelementptr inbounds i32, i32* %6, i64 %21, !dbg !147
  %23 = load i32, i32* %22, align 4, !dbg !147, !tbaa !29
  %24 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %19, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2, i64 0, i64 0), i32 %23), !dbg !149
  %25 = add nuw nsw i64 %21, 1, !dbg !150
  %26 = icmp eq i64 %25, 2048, !dbg !151
  br i1 %26, label %27, label %20, !dbg !145, !llvm.loop !152

; <label>:27:                                     ; preds = %20
  %28 = tail call i32 @fputc(i32 10, %struct._IO_FILE* %19), !dbg !154
  %29 = tail call i32 @fclose(%struct._IO_FILE* %19), !dbg !155
  ret i32 0, !dbg !156
}

; Function Attrs: nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @srand(i32) local_unnamed_addr #1

; Function Attrs: nounwind
declare i64 @time(i64*) local_unnamed_addr #1

; Function Attrs: nounwind
declare i32 @rand() local_unnamed_addr #1

; Function Attrs: nounwind
declare noalias %struct._IO_FILE* @fopen(i8* nocapture readonly, i8* nocapture readonly) local_unnamed_addr #1

; Function Attrs: nounwind
declare i32 @fprintf(%struct._IO_FILE* nocapture, i8* nocapture readonly, ...) local_unnamed_addr #1

; Function Attrs: nounwind
declare i32 @fclose(%struct._IO_FILE* nocapture) local_unnamed_addr #1

; Function Attrs: nounwind readnone speculatable
declare void @llvm.dbg.value(metadata, metadata, metadata) #2

; Function Attrs: nounwind
declare i32 @fputc(i32, %struct._IO_FILE* nocapture) local_unnamed_addr #3

attributes #0 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind readnone speculatable }
attributes #3 = { nounwind }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!6, !7, !8}
!llvm.ident = !{!9}

!0 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1, producer: "clang version 6.0.0 (tags/RELEASE_600/final)", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2, retainedTypes: !3)
!1 = !DIFile(filename: "triad.c", directory: "/workspace/LLVM-Tracer/example/triad")
!2 = !{}
!3 = !{!4}
!4 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5, size: 64)
!5 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!6 = !{i32 2, !"Dwarf Version", i32 4}
!7 = !{i32 2, !"Debug Info Version", i32 3}
!8 = !{i32 1, !"wchar_size", i32 4}
!9 = !{!"clang version 6.0.0 (tags/RELEASE_600/final)"}
!10 = distinct !DISubprogram(name: "triad", scope: !1, file: !1, line: 3, type: !11, isLocal: false, isDefinition: true, scopeLine: 3, flags: DIFlagPrototyped, isOptimized: true, unit: !0, variables: !13)
!11 = !DISubroutineType(types: !12)
!12 = !{null, !4, !4, !4, !5}
!13 = !{!14, !15, !16, !17, !18}
!14 = !DILocalVariable(name: "a", arg: 1, scope: !10, file: !1, line: 3, type: !4)
!15 = !DILocalVariable(name: "b", arg: 2, scope: !10, file: !1, line: 3, type: !4)
!16 = !DILocalVariable(name: "c", arg: 3, scope: !10, file: !1, line: 3, type: !4)
!17 = !DILocalVariable(name: "s", arg: 4, scope: !10, file: !1, line: 3, type: !5)
!18 = !DILocalVariable(name: "i", scope: !10, file: !1, line: 4, type: !5)
!19 = !DILocation(line: 3, column: 17, scope: !10)
!20 = !DILocation(line: 3, column: 24, scope: !10)
!21 = !DILocation(line: 3, column: 32, scope: !10)
!22 = !DILocation(line: 3, column: 39, scope: !10)
!23 = !DILocation(line: 4, column: 6, scope: !10)
!24 = !DILocation(line: 5, column: 7, scope: !25)
!25 = distinct !DILexicalBlock(scope: !10, file: !1, line: 5, column: 7)
!26 = !DILocation(line: 6, column: 10, scope: !27)
!27 = distinct !DILexicalBlock(scope: !28, file: !1, line: 5, column: 25)
!28 = distinct !DILexicalBlock(scope: !25, file: !1, line: 5, column: 7)
!29 = !{!30, !30, i64 0}
!30 = !{!"int", !31, i64 0}
!31 = !{!"omnipotent char", !32, i64 0}
!32 = !{!"Simple C/C++ TBAA"}
!33 = !DILocation(line: 6, column: 19, scope: !27)
!34 = !DILocation(line: 6, column: 18, scope: !27)
!35 = !DILocation(line: 6, column: 15, scope: !27)
!36 = !DILocation(line: 6, column: 3, scope: !27)
!37 = !DILocation(line: 6, column: 8, scope: !27)
!38 = !DILocation(line: 5, column: 22, scope: !28)
!39 = !DILocation(line: 5, column: 16, scope: !28)
!40 = distinct !{!40, !24, !41}
!41 = !DILocation(line: 7, column: 2, scope: !25)
!42 = !DILocation(line: 8, column: 1, scope: !10)
!43 = distinct !DISubprogram(name: "main", scope: !1, file: !1, line: 10, type: !44, isLocal: false, isDefinition: true, scopeLine: 10, isOptimized: true, unit: !0, variables: !46)
!44 = !DISubroutineType(types: !45)
!45 = !{!5}
!46 = !{!47, !48, !49, !50, !51}
!47 = !DILocalVariable(name: "a", scope: !43, file: !1, line: 11, type: !4)
!48 = !DILocalVariable(name: "b", scope: !43, file: !1, line: 11, type: !4)
!49 = !DILocalVariable(name: "c", scope: !43, file: !1, line: 11, type: !4)
!50 = !DILocalVariable(name: "i", scope: !43, file: !1, line: 15, type: !5)
!51 = !DILocalVariable(name: "output", scope: !43, file: !1, line: 25, type: !52)
!52 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !53, size: 64)
!53 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !54, line: 7, baseType: !55)
!54 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/FILE.h", directory: "/workspace/LLVM-Tracer/example/triad")
!55 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !56, line: 245, size: 1728, elements: !57)
!56 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/libio.h", directory: "/workspace/LLVM-Tracer/example/triad")
!57 = !{!58, !59, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !80, !81, !82, !83, !87, !89, !91, !95, !98, !100, !102, !103, !104, !105, !109, !110}
!58 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !55, file: !56, line: 246, baseType: !5, size: 32)
!59 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !55, file: !56, line: 251, baseType: !60, size: 64, offset: 64)
!60 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !61, size: 64)
!61 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!62 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !55, file: !56, line: 252, baseType: !60, size: 64, offset: 128)
!63 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !55, file: !56, line: 253, baseType: !60, size: 64, offset: 192)
!64 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !55, file: !56, line: 254, baseType: !60, size: 64, offset: 256)
!65 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !55, file: !56, line: 255, baseType: !60, size: 64, offset: 320)
!66 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !55, file: !56, line: 256, baseType: !60, size: 64, offset: 384)
!67 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !55, file: !56, line: 257, baseType: !60, size: 64, offset: 448)
!68 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !55, file: !56, line: 258, baseType: !60, size: 64, offset: 512)
!69 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !55, file: !56, line: 260, baseType: !60, size: 64, offset: 576)
!70 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !55, file: !56, line: 261, baseType: !60, size: 64, offset: 640)
!71 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !55, file: !56, line: 262, baseType: !60, size: 64, offset: 704)
!72 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !55, file: !56, line: 264, baseType: !73, size: 64, offset: 768)
!73 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !74, size: 64)
!74 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_marker", file: !56, line: 160, size: 192, elements: !75)
!75 = !{!76, !77, !79}
!76 = !DIDerivedType(tag: DW_TAG_member, name: "_next", scope: !74, file: !56, line: 161, baseType: !73, size: 64)
!77 = !DIDerivedType(tag: DW_TAG_member, name: "_sbuf", scope: !74, file: !56, line: 162, baseType: !78, size: 64, offset: 64)
!78 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !55, size: 64)
!79 = !DIDerivedType(tag: DW_TAG_member, name: "_pos", scope: !74, file: !56, line: 166, baseType: !5, size: 32, offset: 128)
!80 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !55, file: !56, line: 266, baseType: !78, size: 64, offset: 832)
!81 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !55, file: !56, line: 268, baseType: !5, size: 32, offset: 896)
!82 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !55, file: !56, line: 272, baseType: !5, size: 32, offset: 928)
!83 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !55, file: !56, line: 274, baseType: !84, size: 64, offset: 960)
!84 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off_t", file: !85, line: 140, baseType: !86)
!85 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types.h", directory: "/workspace/LLVM-Tracer/example/triad")
!86 = !DIBasicType(name: "long int", size: 64, encoding: DW_ATE_signed)
!87 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !55, file: !56, line: 278, baseType: !88, size: 16, offset: 1024)
!88 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!89 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !55, file: !56, line: 279, baseType: !90, size: 8, offset: 1040)
!90 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!91 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !55, file: !56, line: 280, baseType: !92, size: 8, offset: 1048)
!92 = !DICompositeType(tag: DW_TAG_array_type, baseType: !61, size: 8, elements: !93)
!93 = !{!94}
!94 = !DISubrange(count: 1)
!95 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !55, file: !56, line: 284, baseType: !96, size: 64, offset: 1088)
!96 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !97, size: 64)
!97 = !DIDerivedType(tag: DW_TAG_typedef, name: "_IO_lock_t", file: !56, line: 154, baseType: null)
!98 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !55, file: !56, line: 293, baseType: !99, size: 64, offset: 1152)
!99 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off64_t", file: !85, line: 141, baseType: !86)
!100 = !DIDerivedType(tag: DW_TAG_member, name: "__pad1", scope: !55, file: !56, line: 301, baseType: !101, size: 64, offset: 1216)
!101 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!102 = !DIDerivedType(tag: DW_TAG_member, name: "__pad2", scope: !55, file: !56, line: 302, baseType: !101, size: 64, offset: 1280)
!103 = !DIDerivedType(tag: DW_TAG_member, name: "__pad3", scope: !55, file: !56, line: 303, baseType: !101, size: 64, offset: 1344)
!104 = !DIDerivedType(tag: DW_TAG_member, name: "__pad4", scope: !55, file: !56, line: 304, baseType: !101, size: 64, offset: 1408)
!105 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !55, file: !56, line: 306, baseType: !106, size: 64, offset: 1472)
!106 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !107, line: 62, baseType: !108)
!107 = !DIFile(filename: "/usr/local/lib/clang/6.0.0/include/stddef.h", directory: "/workspace/LLVM-Tracer/example/triad")
!108 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!109 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !55, file: !56, line: 307, baseType: !5, size: 32, offset: 1536)
!110 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !55, file: !56, line: 309, baseType: !111, size: 160, offset: 1568)
!111 = !DICompositeType(tag: DW_TAG_array_type, baseType: !61, size: 160, elements: !112)
!112 = !{!113}
!113 = !DISubrange(count: 20)
!114 = !DILocation(line: 12, column: 17, scope: !43)
!115 = !DILocation(line: 12, column: 9, scope: !43)
!116 = !DILocation(line: 11, column: 7, scope: !43)
!117 = !DILocation(line: 13, column: 17, scope: !43)
!118 = !DILocation(line: 13, column: 9, scope: !43)
!119 = !DILocation(line: 11, column: 11, scope: !43)
!120 = !DILocation(line: 14, column: 17, scope: !43)
!121 = !DILocation(line: 14, column: 9, scope: !43)
!122 = !DILocation(line: 11, column: 15, scope: !43)
!123 = !DILocation(line: 16, column: 9, scope: !43)
!124 = !DILocation(line: 16, column: 3, scope: !43)
!125 = !DILocation(line: 15, column: 6, scope: !43)
!126 = !DILocation(line: 17, column: 7, scope: !127)
!127 = distinct !DILexicalBlock(scope: !43, file: !1, line: 17, column: 7)
!128 = !DILocation(line: 18, column: 3, scope: !129)
!129 = distinct !DILexicalBlock(scope: !130, file: !1, line: 17, column: 27)
!130 = distinct !DILexicalBlock(scope: !127, file: !1, line: 17, column: 7)
!131 = !DILocation(line: 18, column: 8, scope: !129)
!132 = !DILocation(line: 19, column: 10, scope: !129)
!133 = !DILocation(line: 19, column: 3, scope: !129)
!134 = !DILocation(line: 19, column: 8, scope: !129)
!135 = !DILocation(line: 20, column: 10, scope: !129)
!136 = !DILocation(line: 20, column: 3, scope: !129)
!137 = !DILocation(line: 20, column: 8, scope: !129)
!138 = !DILocation(line: 17, column: 24, scope: !130)
!139 = !DILocation(line: 17, column: 17, scope: !130)
!140 = distinct !{!140, !126, !141}
!141 = !DILocation(line: 21, column: 2, scope: !127)
!142 = !DILocation(line: 23, column: 2, scope: !43)
!143 = !DILocation(line: 26, column: 12, scope: !43)
!144 = !DILocation(line: 25, column: 9, scope: !43)
!145 = !DILocation(line: 27, column: 2, scope: !146)
!146 = distinct !DILexicalBlock(scope: !43, file: !1, line: 27, column: 2)
!147 = !DILocation(line: 28, column: 28, scope: !148)
!148 = distinct !DILexicalBlock(scope: !146, file: !1, line: 27, column: 2)
!149 = !DILocation(line: 28, column: 5, scope: !148)
!150 = !DILocation(line: 27, column: 19, scope: !148)
!151 = !DILocation(line: 27, column: 12, scope: !148)
!152 = distinct !{!152, !145, !153}
!153 = !DILocation(line: 28, column: 32, scope: !146)
!154 = !DILocation(line: 29, column: 3, scope: !43)
!155 = !DILocation(line: 30, column: 3, scope: !43)
!156 = !DILocation(line: 31, column: 2, scope: !43)
